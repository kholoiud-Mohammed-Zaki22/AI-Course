{"cells":[{"cell_type":"markdown","id":"759d04ba","metadata":{"id":"759d04ba"},"source":["**1-Write a Python program to calculate the length of a string using 2 ways"]},{"cell_type":"code","execution_count":null,"id":"e434c950","metadata":{"id":"e434c950","executionInfo":{"status":"ok","timestamp":1744487918746,"user_tz":420,"elapsed":28280,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"43586603-7ce1-4732-8fbb-9fe4bb48eef1","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the stringkholoud mohamed  zaki\n","21\n"]}],"source":["string=input(\"enter the string\")\n","print(len(string))"]},{"cell_type":"code","execution_count":null,"id":"7a2dfa32","metadata":{"id":"7a2dfa32","executionInfo":{"status":"ok","timestamp":1744488048303,"user_tz":420,"elapsed":19412,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"dd143374-e6a8-4222-d365-2b80d1c35538","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: kholoud mohammed zaki\n","1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n","11\n","12\n","13\n","14\n","15\n","16\n","17\n","18\n","19\n","20\n","21\n"]}],"source":["string=input(\"enter the string: \")\n","count=0\n","for i in string:\n","  count+=1\n","  print(count)"]},{"cell_type":"markdown","id":"d7cc9da7","metadata":{"id":"d7cc9da7"},"source":["**2-Write a Python program to get a string made of the first 2 and last 2 characters of a given string. If the string length is less than 2, return the empty string instead (\"##Sample String : 'w3resource'\n","Expected Result : 'w3ce'\n","##Sample String : 'w3'\n","Expected Result : 'w3w3'\n","##Sample String : ' w'\n","Expected Result : Empty String)"]},{"cell_type":"code","execution_count":null,"id":"dafa9dd8","metadata":{"id":"dafa9dd8","executionInfo":{"status":"ok","timestamp":1744488547515,"user_tz":420,"elapsed":4209,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"06003f8f-1081-470b-b755-e1ff28beeee4","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the stringwa\n","wawa\n"]}],"source":["string=input(\"enter the string\")\n","if len(string)<2:\n","  print(\"empty string\")\n","else:\n","  print(string[:2]+string[-2:])"]},{"cell_type":"markdown","id":"1534f956","metadata":{"id":"1534f956"},"source":["**3-Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string already ends with 'ing', add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged. (Sample String : 'abc'\n","Expected Result : 'abcing')"]},{"cell_type":"code","execution_count":null,"id":"7ff8cec4","metadata":{"id":"7ff8cec4","executionInfo":{"status":"ok","timestamp":1744489407698,"user_tz":420,"elapsed":8321,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"c724ac69-c5c6-4516-d0ae-60b0b4f96cfb","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["enter  the string: abc\n","abcing\n"]}],"source":["string=input(\"enter  the string: \")\n","if len(string)>=3:\n","  if string[-3:]==\"ing\":\n","    print(string+\"ly\")\n","  else:\n","    print(string+\"ing\")\n","else:\n","  print(string)\n","\n"]},{"cell_type":"markdown","id":"1c0a6627","metadata":{"id":"1c0a6627"},"source":["**4-Write a Python function that takes a list of words and return the longest word and the length of the longest one\n","(Longest word: Exercises\n","Length of the longest word: 9)"]},{"cell_type":"code","execution_count":null,"id":"397341d9","metadata":{"id":"397341d9","executionInfo":{"status":"ok","timestamp":1744490875948,"user_tz":420,"elapsed":41096,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"37d07ce9-f9a2-465d-af4e-ca4a465f0c34","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the word:exercise\n","enter the word:very\n","enter the word:good\n","enter the word:try\n","enter the word:think\n","exercise\n","8\n"]}],"source":["x=list()\n","for i in range (5):\n","  word=input(\"enter the word:\")\n","  x.append(word)\n","longest_word=max(x,key=len)\n","print(longest_word)\n","print(len(longest_word))"]},{"cell_type":"markdown","id":"53a03a6a","metadata":{"id":"53a03a6a"},"source":["**5-Write a Python program to change a given string to a newly string where the first and last chars have been exchanged using 2 ways (Sample String:abca  Expected Result:ebce)"]},{"cell_type":"code","execution_count":null,"id":"fd327d2a","metadata":{"id":"fd327d2a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744499048358,"user_tz":420,"elapsed":6768,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"6130e42f-1305-4852-8dc5-5dd762019788"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: kholoud\n","dholouk\n"]}],"source":["string=input(\"enter the string: \")\n","print(string[-1:]+string[1:-1]+string[0:1])"]},{"cell_type":"code","execution_count":null,"id":"285788b4","metadata":{"id":"285788b4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744499335586,"user_tz":420,"elapsed":6636,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"1ec7ab5c-6397-47cf-e756-35dee37b9050"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: kholoud\n","dholouk\n"]}],"source":["def swap(string):\n","  return string[-1:]+string[1:-1]+string[0:1]\n","string=input(\"enter the string: \")\n","print(swap(string))\n"]},{"cell_type":"markdown","id":"25f89808","metadata":{"id":"25f89808"},"source":["**6-Write a Python program to remove characters that have odd index values in a given string (Sample String:abca Expected Result:ac)"]},{"cell_type":"code","execution_count":null,"id":"05959bd7","metadata":{"id":"05959bd7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744664632536,"user_tz":420,"elapsed":7386,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"fdf6f7a8-de5e-4c27-e03a-8ec9293d009c"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: kholoud\n","kood\n"]}],"source":["def remove_characters(string):\n","  result=\"\"\n","  for i in range(len(string)):\n","    if i%2==0:\n","      result+=string[i]\n","  return result\n","string=input(\"enter the string: \")\n","print(remove_characters(string))"]},{"cell_type":"markdown","id":"eb16e898","metadata":{"id":"eb16e898"},"source":["**7-Write a Python program to count the occurrences of each word in a given sentence (Sample String:amr and ahmed are frindes but amr is the tallest Expected Result:2)"]},{"cell_type":"code","execution_count":null,"id":"01ce6cf5","metadata":{"id":"01ce6cf5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744667830378,"user_tz":420,"elapsed":61,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"0f18fefa-7113-425e-c6bc-a759250daad3"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'amr': 2, 'and': 2, 'ahmed': 1, 'are': 1, 'friends': 1, 'but': 1, 'amris': 1, 'tallest': 1}\n"]}],"source":["\n","def count_occurrences(test):\n","  words=test.split()\n","  word_count={}\n","  for word in words:\n","    if word in word_count:\n","      word_count[word]+=1\n","    else:\n","      word_count[word]=1\n","  return word_count\n","sentence=\"amr and ahmed are friends but amris tallest and amr \"\n","result=count_occurrences(sentence)\n","print(result)"]},{"cell_type":"markdown","id":"4e8125f1","metadata":{"id":"4e8125f1"},"source":["**8-Write a Python script that takes input from the user and displays that input back in upper and lower cases"]},{"cell_type":"code","execution_count":null,"id":"66c8f778","metadata":{"id":"66c8f778","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744669407222,"user_tz":420,"elapsed":15688,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"beac72b7-d3fc-4ebf-e602-7e1c4f1861e1"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: kholoud mohammed zaki\n","KHOLOUD MOHAMMED ZAKI\n","kholoud mohammed zaki\n"]}],"source":["string=input(\"enter the string: \")\n","print(string.upper())\n","print(string.lower())"]},{"cell_type":"markdown","id":"fcd68aa1","metadata":{"id":"fcd68aa1"},"source":["**9-Write a Python function to reverse a string if its length is a multiple of 4"]},{"cell_type":"code","execution_count":null,"id":"0671a931","metadata":{"id":"0671a931","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744670431610,"user_tz":420,"elapsed":6255,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"1dc4ae0a-89e8-432c-c147-7d7a72306604"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: abcd\n","dcba\n"]}],"source":["def reverse_string(string):\n","  if len(string)%4==0:\n","    return string[::-1]\n","  else:\n","    return string\n","string=input(\"enter the string: \")\n","print(reverse_string(string))"]},{"cell_type":"markdown","id":"b577c68d","metadata":{"id":"b577c68d"},"source":["**10- Write a Python program to remove a newline in Python"]},{"cell_type":"code","execution_count":null,"id":"e0c6525a","metadata":{"id":"e0c6525a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744673049918,"user_tz":420,"elapsed":48,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"b6f2396f-bf2b-4ada-83b9-abf1ef02ab9e"},"outputs":[{"output_type":"stream","name":"stdout","text":["kholoudmohammed\n"]}],"source":["def remove_newline(string):\n","  return string.replace(\"\\n\",\"\")\n","string=\"kholoud\\nmohammed\"\n","print(remove_newline(string))\n"]},{"cell_type":"markdown","id":"80db5ae0","metadata":{"id":"80db5ae0"},"source":["**11-Write a Python program to check whether a string starts with specified characters"]},{"cell_type":"code","execution_count":null,"id":"0cc4e03e","metadata":{"id":"0cc4e03e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744673173529,"user_tz":420,"elapsed":11774,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"d976be7c-caa5-4e00-fb87-ece88fad5f4c"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: kholoud\n","enter the character: k\n","True\n"]}],"source":["def check_string(string,char):\n","  return string.startswith(char)\n","string=input(\"enter the string: \")\n","char=input(\"enter the character: \")\n","print(check_string(string,char))"]},{"cell_type":"markdown","id":"593a68db","metadata":{"id":"593a68db"},"source":["**12- Write a Python program to add prefix text to all of the lines in a string"]},{"cell_type":"code","execution_count":null,"id":"d2e46ada","metadata":{"id":"d2e46ada","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744674970537,"user_tz":420,"elapsed":17,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"63a2e294-e9ef-4c60-a289-9f3c4fcfd4b0"},"outputs":[{"output_type":"stream","name":"stdout","text":["hello kholoud\n","hello mohammed\n"]}],"source":["def add_prefix(string,prefix):\n","  lines=string.splitlines()\n","  result=[]\n","  for line in lines:\n","    result.append(prefix+line)\n","  return \"\\n\".join(result)\n","string=\"\"\"kholoud\n","mohammed\"\"\"\n","prefix=\"hello \"\n","print(add_prefix(string,prefix))"]},{"cell_type":"markdown","id":"86fa1543","metadata":{"id":"86fa1543"},"source":["**13-Write a Python program to print the following numbers up to 2 decimal places"]},{"cell_type":"code","execution_count":null,"id":"cd4a9d89","metadata":{"id":"cd4a9d89","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745056866982,"user_tz":420,"elapsed":11733,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"b167aa09-6c25-4d02-b360-7e319634daf6"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number: 23.4567\n","23.46\n"]}],"source":["number=float(input(\"enter the number: \"))\n","print(f\"{number:.2f}\")"]},{"cell_type":"markdown","id":"452c0ab0","metadata":{"id":"452c0ab0"},"source":["**14-Write a Python program to print the following numbers up to 2 decimal places with a sign"]},{"cell_type":"code","execution_count":null,"id":"73e82479","metadata":{"id":"73e82479"},"outputs":[],"source":["number=float(input(\"enter the number: \"))\n","print(f\"{number:.2f}\")"]},{"cell_type":"markdown","id":"32b1811a","metadata":{"id":"32b1811a"},"source":["**15-Write a Python program to display a number with a comma separator"]},{"cell_type":"code","execution_count":null,"id":"f30fc0b6","metadata":{"id":"f30fc0b6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745057303175,"user_tz":420,"elapsed":14970,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"139fe41a-af49-453e-9d65-fbdf36e31e6b"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number: 1234567\n","1,234,567\n"]}],"source":["number=int(input(\"enter the number: \"))\n","print(f\"{number:,}\")"]},{"cell_type":"markdown","id":"0477f487","metadata":{"id":"0477f487"},"source":["**16-Write a Python program to reverse a string using 2 ways"]},{"cell_type":"code","execution_count":null,"id":"aa8beec8","metadata":{"id":"aa8beec8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745057561972,"user_tz":420,"elapsed":7415,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"59970c9a-5048-4b69-bddb-2d2e4f2c302c"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: kholoud\n","duolohk\n"]}],"source":["string=input(\"enter the string: \")\n","print(string[::-1])"]},{"cell_type":"code","source":["\n","def reverse_string(string):\n","  if len(string)!=0:\n","    return string[::-1]\n","  else:\n","    return string\n","string=input(\"enter the string: \")\n","print(reverse_string(string))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7GPbUKb0iGh9","executionInfo":{"status":"ok","timestamp":1745057882740,"user_tz":420,"elapsed":6003,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"08bd74ab-0603-4c3b-e1e2-c19f00dd28df"},"id":"7GPbUKb0iGh9","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: kholoud\n","duolohk\n"]}]},{"cell_type":"markdown","id":"5afc3166","metadata":{"id":"5afc3166"},"source":[" **17-Write a Python program to count repeated characters in a string (hint:use dictionary)"]},{"cell_type":"code","execution_count":null,"id":"515a469c","metadata":{"id":"515a469c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745060772497,"user_tz":420,"elapsed":27307,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"61c7c944-22be-4a53-bdfc-3a2e55189cfd"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: kholod mohamed\n","{'k': 1, 'h': 2, 'o': 3, 'l': 1, 'd': 2, ' ': 1, 'm': 2, 'a': 1, 'e': 1}\n"]}],"source":["def count_characters(string):\n","  count={}\n","  for char in string:\n","    if char in count:\n","      count[char]+=1\n","    else:\n","      count[char]=1\n","  return count\n","string=input(\"enter the string: \")\n","print(count_characters(string))"]},{"cell_type":"markdown","id":"ae14e4e5","metadata":{"id":"ae14e4e5"},"source":["**18-Write a Python program to find the first non-repeating character in a given string"]},{"cell_type":"code","execution_count":null,"id":"d73778e5","metadata":{"id":"d73778e5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745065200141,"user_tz":420,"elapsed":22386,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"3257c113-9aa7-495e-dd29-e276b8dfb8c7"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: kholoud\n","k\n"]}],"source":["def first_non_repeating_character(string):\n","  count={}\n","  for char in string:\n","    if char.count(char)==1:\n","      return char\n","string=input(\"enter the string: \")\n","print(first_non_repeating_character(string))"]},{"cell_type":"markdown","id":"3adf5669","metadata":{"id":"3adf5669"},"source":["**19-Write a Python program to remove spaces from a given string"]},{"cell_type":"code","execution_count":null,"id":"b4f22602","metadata":{"id":"b4f22602","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745064320486,"user_tz":420,"elapsed":17867,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"d4416ecd-7114-4b15-e37c-6867144cd006"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: kholoud  mohammed\n","kholoudmohammed\n"]}],"source":["string=input(\"enter the string: \")\n","print(string.replace(\" \",\"\"))"]},{"cell_type":"markdown","id":"734de60c","metadata":{"id":"734de60c"},"source":["**20-Write a Python program to count the number of non-empty substrings of a given string"]},{"cell_type":"code","execution_count":null,"id":"ef3f2274","metadata":{"id":"ef3f2274","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745064540542,"user_tz":420,"elapsed":5146,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"6f929d4e-7cd2-44de-a0af-e06376e0ae7b"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the string: abc\n","6\n"]}],"source":["def substring(string):\n","  n=len(string)\n","  return (n*(n+1))//2\n","\n","string=input(\"enter the string: \")\n","print(substring(string))\n"]},{"cell_type":"markdown","id":"509998e2","metadata":{"id":"509998e2"},"source":["**21-write a Python program to swap first and last element of any list."]},{"cell_type":"code","source":["x=list()\n","for i in range (5):\n","  word=input(\"enter the word:\")\n","  x.append(word)\n","x[0],x[-1]=x[-1],x[0]\n","print(x)34"],"metadata":{"id":"nalD242K9vcD","executionInfo":{"status":"ok","timestamp":1745065153410,"user_tz":420,"elapsed":9880,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"fa333a53-fd18-4529-8fe3-d59c84039fa0","colab":{"base_uri":"https://localhost:8080/"}},"id":"nalD242K9vcD","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the word:1\n","enter the word:2\n","enter the word:3\n","enter the word:4\n","enter the word:5\n","['5', '2', '3', '4', '1']\n"]}]},{"cell_type":"code","execution_count":null,"id":"68692d7f","metadata":{"id":"68692d7f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745064723158,"user_tz":420,"elapsed":48,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"6147eb84-c038-48c9-d15e-e09e01066ca0"},"outputs":[{"output_type":"stream","name":"stdout","text":["[8, 2, 3, 4, 5, 6, 7, 1]\n"]}],"source":["x=list(range(1,9))\n","\n","x[0],x[-1]=x[-1],x[0]\n","print(x)\n"]},{"cell_type":"markdown","id":"959e0837","metadata":{"id":"959e0837"},"source":["**22-Given a list in Python and provided the positions of the elements, write a program to swap the two elements in the list. (Input : List = [23, 65, 19, 90], pos1 = 1, pos2 = 3\n","Output : [19, 65, 23, 90])"]},{"cell_type":"code","execution_count":null,"id":"225d8c6d","metadata":{"id":"225d8c6d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745065438471,"user_tz":420,"elapsed":25,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"bd0f63b0-9d58-433b-e802-cc01b045a51a"},"outputs":[{"output_type":"stream","name":"stdout","text":["[19, 65, 23, 90]\n"]}],"source":["x=[23,65,19,90]\n","x[0],x[2]=x[2],x[0]\n","print(x)"]},{"cell_type":"code","source":["x=[23,65,19,90]\n","for i in range(len(x)):\n","  if i==1:\n","    x[0],x[2]=x[2],x[0]\n","print(x)"],"metadata":{"id":"zKKS6Z-GAY6m","executionInfo":{"status":"ok","timestamp":1745065590630,"user_tz":420,"elapsed":14,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"6d7dc3da-0c1a-4827-f82e-c1fde1f0559a","colab":{"base_uri":"https://localhost:8080/"}},"id":"zKKS6Z-GAY6m","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[19, 65, 23, 90]\n"]}]},{"cell_type":"markdown","id":"66fc6682","metadata":{"id":"66fc6682"},"source":["**23- search for the all ways to know the length of the list"]},{"cell_type":"code","source":["x=[2,3,4,5,6,7]\n","print(len(x))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"61nuxY4PbRxS","executionInfo":{"status":"ok","timestamp":1745139647061,"user_tz":420,"elapsed":60,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"47f1b574-6d63-46ef-d6b9-ac68b8f86321"},"id":"61nuxY4PbRxS","execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["6\n"]}]},{"cell_type":"code","source":["x=[2,3,4,5,6,7]\n","count=0\n","for i in range(len(x)):\n","  count+=1\n","print(count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jhARZVcobdSO","executionInfo":{"status":"ok","timestamp":1745139925378,"user_tz":420,"elapsed":42,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"bb5db87b-3da1-4436-c46a-d45a8b393476"},"id":"jhARZVcobdSO","execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["6\n"]}]},{"cell_type":"code","execution_count":null,"id":"63ff8b43","metadata":{"id":"63ff8b43"},"outputs":[],"source":["**24-write a Python code to find the Maximum number of list of numbers."]},{"cell_type":"code","execution_count":null,"id":"15f342de","metadata":{"id":"15f342de","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745065709457,"user_tz":420,"elapsed":41,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"b442d66f-2b92-4fdb-b933-d0651c893aac"},"outputs":[{"output_type":"stream","name":"stdout","text":["20\n"]}],"source":["x=list(range(21))\n","print(max(x))"]},{"cell_type":"code","source":["x=list()\n","for i in range(6):\n","  number=int(input(\"enter the number:\"))\n","  x.append(number)\n","  print(max(x))\n"],"metadata":{"id":"KdeW88GCBaj9","executionInfo":{"status":"ok","timestamp":1745066459794,"user_tz":420,"elapsed":32215,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"dd04010b-e8b9-44ba-fdd0-78f691f42910","colab":{"base_uri":"https://localhost:8080/"}},"id":"KdeW88GCBaj9","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number:4\n","4\n","enter the number:55\n","55\n","enter the number:66\n","66\n","enter the number:77\n","77\n","enter the number:33\n","77\n","enter the number:99\n","99\n"]}]},{"cell_type":"code","execution_count":null,"id":"1a89b9d3","metadata":{"id":"1a89b9d3"},"outputs":[],"source":["**25-write a Python code to find the Minimum number of list of numbers."]},{"cell_type":"code","execution_count":null,"id":"21f8cbd6","metadata":{"id":"21f8cbd6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745066548548,"user_tz":420,"elapsed":43,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"22a6550a-60e9-4a6e-fafd-dd051048d39d"},"outputs":[{"output_type":"stream","name":"stdout","text":["1\n"]}],"source":["x=list(range(1,21))\n","print(min(x))"]},{"cell_type":"code","source":["x=list()\n","for i in range(6):\n","  number=int(input(\"enter the number:\"))\n","  x.append(number)\n","  print(min(x))"],"metadata":{"id":"DNfm3EeBDgFx","executionInfo":{"status":"ok","timestamp":1745066547851,"user_tz":420,"elapsed":57771,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"0ee20c69-80e3-4149-c2ab-bfabf436bcf7","colab":{"base_uri":"https://localhost:8080/"}},"id":"DNfm3EeBDgFx","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number:22\n","22\n","enter the number:33\n","22\n","enter the number:11\n","11\n","enter the number:99\n","11\n","enter the number:44\n","11\n","enter the number:76\n","11\n"]}]},{"cell_type":"markdown","id":"96822d96","metadata":{"id":"96822d96"},"source":["**26-search for if an elem is existing in list"]},{"cell_type":"code","execution_count":null,"id":"51ca5c9a","metadata":{"id":"51ca5c9a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745085249144,"user_tz":420,"elapsed":36,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"3aa0e2e7-ccda-4775-a1e5-4d7062551acc"},"outputs":[{"output_type":"stream","name":"stdout","text":["is found\n"]}],"source":["x=[\"ahmed\",\"mohammed\",\"kholoud\"]\n","if \"mohammed\" in x:\n","  print(\"is found\")\n","else:\n","  print(\"is not found\")"]},{"cell_type":"markdown","id":"d9557da7","metadata":{"id":"d9557da7"},"source":["**27- clear python list using different ways"]},{"cell_type":"code","execution_count":null,"id":"b69858a3","metadata":{"id":"b69858a3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745085319579,"user_tz":420,"elapsed":60,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"7ded868f-1b27-416d-a2fa-da021c6c6f84"},"outputs":[{"output_type":"stream","name":"stdout","text":["[]\n"]}],"source":["x=[2,55,4,77,99,7.7]\n","x.clear()\n","print(x)"]},{"cell_type":"code","source":["x=[2,55,4,77,99,7.7]\n","del x[:]\n","print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HlfnJTYqMN6p","executionInfo":{"status":"ok","timestamp":1745085413382,"user_tz":420,"elapsed":33,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"9110006f-ea93-422b-f06d-d98f963c2ce1"},"id":"HlfnJTYqMN6p","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[]\n"]}]},{"cell_type":"code","source":["x=list()\n","for i in range(5):\n","  number=int(input(\"enter the number:\"))\n","  x.append(number)\n","x.clear()\n","print(x)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"36MCCG-JMkh7","executionInfo":{"status":"ok","timestamp":1745085519178,"user_tz":420,"elapsed":29799,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"9c254357-8ce5-4aa4-e75e-bf5e00d0ff78"},"id":"36MCCG-JMkh7","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number:6\n","enter the number:8\n","enter the number:9\n","enter the number:4\n","enter the number:66\n","[]\n"]}]},{"cell_type":"markdown","id":"52160e88","metadata":{"id":"52160e88"},"source":["**28-remove duplicated elements from a list"]},{"cell_type":"code","source":["def duplicated_elements(x):\n","  for i in x:\n","    if x.count(number)>1:\n","      x.remove(i)\n","  return x\n","x=list()\n","for i in range(5):\n","  number=int(input(\"enter the number:\"))\n","  x.append(number)\n","print(duplicated_elements(x))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hnzrwTJVO8BW","executionInfo":{"status":"ok","timestamp":1745086468940,"user_tz":420,"elapsed":11644,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"7e58c1db-28ee-442b-e716-033e3e2365db"},"id":"hnzrwTJVO8BW","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number:5\n","enter the number:6\n","enter the number:5\n","enter the number:3\n","enter the number:5\n","[6, 3, 5]\n"]}]},{"cell_type":"code","execution_count":null,"id":"5e362228","metadata":{"id":"5e362228","colab":{"base_uri":"https://localhost:8080/","height":228},"collapsed":true,"executionInfo":{"status":"error","timestamp":1745086156985,"user_tz":420,"elapsed":4225,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"8cf2485d-0a84-4774-8413-af1b5a607b3d"},"outputs":[{"name":"stdout","output_type":"stream","text":["enter the number: 5\n"]},{"output_type":"error","ename":"AttributeError","evalue":"'int' object has no attribute 'count'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-50c04190e127>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m   \u001b[0mnumber\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"enter the number: \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m   \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnumber\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m   \u001b[0;32mif\u001b[0m \u001b[0mnumber\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnumber\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m>\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m     \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mremove\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnumber\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'int' object has no attribute 'count'"]}],"source":["\n"]},{"cell_type":"markdown","id":"282337f7","metadata":{"id":"282337f7"},"source":["**29-Given list values and keys list, convert these values to key value pairs in form of list of dictionaries. (Input : test_list = [“Gfg”, 3, “is”, 8], key_list = [“name”, “id”]\n","Output : [{‘name’: ‘Gfg’, ‘id’: 3}, {‘name’: ‘is’, ‘id’: 8}])"]},{"cell_type":"code","execution_count":null,"id":"4d4e2d28","metadata":{"id":"4d4e2d28","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745087822846,"user_tz":420,"elapsed":29,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"7032b8b3-fe9c-43ed-ee4a-d962472691b4"},"outputs":[{"output_type":"stream","name":"stdout","text":["[{'name': 'Gfg', 'id': 3}, {'name': 'is', 'id': 8}]\n"]}],"source":["x=[\"Gfg\",3,\"is\",8]\n","y=[\"name\",\"id\"]\n","z=[]\n","for i in range(0,len(x),2):\n","  z.append({y[0]:x[i],y[1]:x[i+1]})\n","print(z)"]},{"cell_type":"markdown","id":"c26b6e9f","metadata":{"id":"c26b6e9f"},"source":["**30-write a python program to count unique values inside a list using different ways"]},{"cell_type":"code","source":["def unique_values(x):\n","  count=0\n","  for i in x:\n","    if x.count(i)==1:\n","      count+=1\n","  return count\n","x=list()\n","for i in range(11):\n","  number=int(input(\"enter the number:\"))\n","  x.append(number)\n","print( unique_values(x))"],"metadata":{"id":"DYWAJulGZkLx","executionInfo":{"status":"ok","timestamp":1745089176197,"user_tz":420,"elapsed":32529,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"68b24742-c5bd-4735-b330-f125cba2c518","colab":{"base_uri":"https://localhost:8080/"}},"id":"DYWAJulGZkLx","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number:5\n","enter the number:6\n","enter the number:7\n","enter the number:4\n","enter the number:5\n","enter the number:6\n","enter the number:4\n","enter the number:8\n","enter the number:9\n","enter the number:2\n","enter the number:8\n","3\n"]}]},{"cell_type":"code","execution_count":null,"id":"72132667","metadata":{"id":"72132667","colab":{"base_uri":"https://localhost:8080/","height":315},"collapsed":true,"executionInfo":{"status":"error","timestamp":1745089252944,"user_tz":420,"elapsed":4614,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"05201ccf-2c5d-4fe8-be8d-075c396bd033"},"outputs":[{"name":"stdout","output_type":"stream","text":["enter the list: 5\n"]},{"output_type":"error","ename":"TypeError","evalue":"'int' object is not iterable","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-23-cb4432d6e0be>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m   \u001b[0;32mreturn\u001b[0m \u001b[0mcount\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"enter the list: \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m \u001b[0munique_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-23-cb4432d6e0be>\u001b[0m in \u001b[0;36munique_values\u001b[0;34m(x)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0munique_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m   \u001b[0mcount\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m   \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcount\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m       \u001b[0mcount\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m+=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'int' object is not iterable"]}],"source":[]},{"cell_type":"markdown","id":"fed6677c","metadata":{"id":"fed6677c"},"source":["**31-write a python program Extract all elements with Frequency greater than K (Input : test_list = [4, 6, 4, 3, 3, 4, 3, 4, 3, 8], K = 3\n","Output : [4, 3] )"]},{"cell_type":"code","execution_count":null,"id":"d81f3f9d","metadata":{"id":"d81f3f9d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745090656857,"user_tz":420,"elapsed":30323,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"5e6d368d-7f8d-4856-96b3-760460538431"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the num: 4\n","enter the num: 6\n","enter the num: 4\n","enter the num: 3\n","enter the num: 3\n","enter the num: 4\n","enter the num: 3\n","enter the num: 4\n","enter the num: 3\n","[4, 3]\n"]}],"source":["def extrat_element(x):\n","  k=[]\n","  for i in x:\n","    if x.count(i)>=3 and i not in k:\n","      k.append(i)\n","  return k\n","x=list()\n","for i in range(9):\n","  num=int(input(\"enter the num: \"))\n","  x.append(num)\n","print(extrat_element(x))"]},{"cell_type":"markdown","id":"caca5224","metadata":{"id":"caca5224"},"source":["**32-write a python program to find the Strongest Neighbour (Input: 1 2 2 3 4 5\n","Output: 2 2 3 4 5)"]},{"cell_type":"code","execution_count":null,"id":"39fbd9b2","metadata":{"id":"39fbd9b2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745092774996,"user_tz":420,"elapsed":29,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"b59f1880-82a6-400a-d8c6-0a7a93e48724"},"outputs":[{"output_type":"stream","name":"stdout","text":["2 2 3 4 5 None\n"]}],"source":["def strongest_neighbour(x):\n","  for i in range(1,len(x)):\n","    print(max(x[i-1],x[i]),end=\" \")\n","\n","x=[1,2,2,3,4,5]\n","print(strongest_neighbour(x))\n"]},{"cell_type":"markdown","id":"a9fa8baf","metadata":{"id":"a9fa8baf"},"source":["**33-write a Python Program to print all Possible Combinations from the three Digits (Input: [1, 2, 3]\n","Output:\n","1 2 3 ##\n","1 3 2 ##\n","2 1 3 ##\n","2 3 1 ##\n","3 1 2 ##\n","3 2 1)"]},{"cell_type":"code","execution_count":null,"id":"8c520a76","metadata":{"id":"8c520a76","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745093570650,"user_tz":420,"elapsed":53,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"635f5b48-5ddb-477a-a357-58212aa6f94f"},"outputs":[{"output_type":"stream","name":"stdout","text":["1 2 3 ## 1 3 2 ## 2 1 3 ## 2 3 1 ## 3 1 2 ## 3 2 1 ## None\n"]}],"source":["def combination(x):\n","  for i in range(len(x)):\n","    for j in range(len(x)):\n","      for k in range(len(x)):\n","        if i!=j and j!=k and i!=k:\n","          print(x[i],x[j],x[k],end=\" ## \")\n","x=[1,2,3]\n","print(combination(x))"]},{"cell_type":"markdown","id":"5288bb89","metadata":{"id":"5288bb89"},"source":["**34-write a Python program to find all the Combinations in the list with the given condition (Input: test_list = [1,2,3]\n","Output:\n"," [1], [1, 2], [1, 2, 3], [1, 3]\n"," [2], [2, 3], [3])"]},{"cell_type":"code","execution_count":null,"id":"59b89646","metadata":{"id":"59b89646","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745094031470,"user_tz":420,"elapsed":66,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"1824c15a-e409-4577-98d9-aa659dbd6318"},"outputs":[{"output_type":"stream","name":"stdout","text":["[1],[1, 2],[1, 2, 3],[2],[2, 3],[3],None\n"]}],"source":["def combination(x):\n","  for i in range(len(x)):\n","    for j in range(i,len(x)):\n","      print(x[i:j+1],end=\",\")\n","x=[1,2,3]\n","print(combination(x))"]},{"cell_type":"markdown","id":"39973705","metadata":{"id":"39973705"},"source":["**35-write a Python program to get all unique combinations of two Lists (List_1 = [\"a\",\"b\"]\n","List_2 = [1,2]\n","Unique_combination = [[('a',1),('b',2)],[('a',2),('b',1)]] )"]},{"cell_type":"code","execution_count":null,"id":"8c4ba22b","metadata":{"id":"8c4ba22b","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745094557878,"user_tz":420,"elapsed":20,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"3bed0936-0fc6-4ac3-838b-cdc88dedb4fe"},"outputs":[{"output_type":"stream","name":"stdout","text":["[('a', 1), ('a', 2), ('b', 1), ('b', 2)]\n"]}],"source":["def combination(x,y):\n","  z=[]\n","  for i in range(len(x)):\n","    for j in range(len(y)):\n","     z.append((x[i],y[j]))\n","  return z\n","x=[\"a\",\"b\"]\n","y=[1,2]\n","print(combination(x,y))"]},{"cell_type":"markdown","id":"25199af5","metadata":{"id":"25199af5"},"source":["**36-Remove all the occurrences of an element from a list in Python (Input : 1 1 2 3 4 5 1 2 1\n","\n","**Output : 2 3 4 5 2)"]},{"cell_type":"code","execution_count":null,"id":"6dc4c2ba","metadata":{"id":"6dc4c2ba","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745096161154,"user_tz":420,"elapsed":93,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"33f50457-d837-4912-d741-2a3d7f1f0897"},"outputs":[{"output_type":"stream","name":"stdout","text":["[3, 4, 5, 2, 1]\n"]}],"source":["def remove_occurrences_element(x):\n","  for i in x:\n","    if x.count(i)>1:\n","      x.remove(i)\n","  return x\n","x=[1,1,2,3,4,5,1,2,1]\n","print(remove_occurrences_element(x))"]},{"cell_type":"markdown","id":"bf1a3c93","metadata":{"id":"bf1a3c93"},"source":["**37-write a python program to Replace index elements with elements in Other List (The original list 1 is : [‘Gfg’, ‘is’, ‘best’] The original list 2 is : [0, 1, 2, 1, 0, 0, 0, 2, 1, 1, 2, 0] The lists after index elements replacements is : [‘Gfg’, ‘is’, ‘best’, ‘is’, ‘Gfg’, ‘Gfg’, ‘Gfg’, ‘best’, ‘is’, ‘is’, ‘best’, ‘Gfg’])"]},{"cell_type":"code","execution_count":47,"id":"fdd66a71","metadata":{"id":"fdd66a71","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745139468498,"user_tz":420,"elapsed":62,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"b2d9c192-9703-4cb9-d238-cffea86a6f9a"},"outputs":[{"output_type":"stream","name":"stdout","text":["['Gfg', 'is', 'best', 'is', 'Gfg', 'Gfg', 'Gfg', 'best', 'is', 'is', 'best', 'Gfg']\n"]}],"source":["def  replace_index_element(x,y):\n","  return [x[i] for  i in y]\n","\n","x=['Gfg', 'is', 'best']\n","y=[0,1,2,1,0,0,0,2,1,1,2,0]\n","print(replace_index_element(x,y))\n"]},{"cell_type":"markdown","id":"af0f56e8","metadata":{"id":"af0f56e8"},"source":["**38- write python program to Retain records with N occurrences of K(Input : test_list = [(4, 5, 5, 4), (5, 4, 3)], K = 5, N = 2\n","Output : [(4, 5, 5, 4)]\n","Input : test_list = [(4, 5, 5, 4), (5, 4, 3)], K = 5, N = 3\n","Output : [] )"]},{"cell_type":"code","execution_count":null,"id":"67b06671","metadata":{"id":"67b06671","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745101628200,"user_tz":420,"elapsed":13,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"9529b432-e191-40a8-b278-e82f07d97edc"},"outputs":[{"output_type":"stream","name":"stdout","text":["(4, 5, 5, 4)\n","None\n"]}],"source":["def retain_records(x,k,n):\n","  for i in x:\n","    if i.count(k)==n:\n","      print(i)\n","x=[(4,5,5,4),(5,4,3)]\n","k=5\n","n=2\n","print(retain_records(x,k,n))\n"]},{"cell_type":"markdown","id":"de76f183","metadata":{"id":"de76f183"},"source":["**39-write a Python Program to Sort the list according to the column using lambda\n","array = [[1, 3, 3], [2, 1, 2], [3, 2, 1]]\n","Output :\n","Sorted array specific to column 0, [[1, 3, 3], [2, 1, 2], [3, 2, 1]]\n","Sorted array specific to column 1, [[2, 1, 2], [3, 2, 1], [1, 3, 3]]\n","Sorted array specific to column 2, [[3, 2, 1], [2, 1, 2], [1, 3, 3]]"]},{"cell_type":"code","execution_count":null,"id":"dc883308","metadata":{"id":"dc883308","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745102143815,"user_tz":420,"elapsed":13,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"51da08ca-28a4-44e9-c9e1-8a582c63227b"},"outputs":[{"output_type":"stream","name":"stdout","text":["sorted array specific to column 0, [[1, 3, 3], [2, 1, 2], [3, 2, 1]]\n","sorted array specific to column 1, [[2, 1, 2], [3, 2, 1], [1, 3, 3]]\n","sorted array specific to column 2, [[3, 2, 1], [2, 1, 2], [1, 3, 3]]\n","None\n"]}],"source":["def sort_list(x):\n","  for i in range(len(x)):\n","     x.sort(key=lambda x:x[i])\n","     print(f\"sorted array specific to column {i}, {x}\")\n","x=[[1, 3, 3], [2, 1, 2], [3, 2, 1]]\n","print(sort_list(x))"]},{"cell_type":"code","execution_count":41,"id":"d2e7b31f","metadata":{"id":"d2e7b31f","colab":{"base_uri":"https://localhost:8080/","height":106},"collapsed":true,"executionInfo":{"status":"error","timestamp":1745138995987,"user_tz":420,"elapsed":66,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"8aa11569-465d-4b9e-80b6-aa19b5c4b3c4"},"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"invalid syntax (<ipython-input-41-f547604bf4bb>, line 1)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-41-f547604bf4bb>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    **40- write a program to Sort Python Dictionaries by Key or Value\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}],"source":["**40- write a program to Sort Python Dictionaries by Key or Value\n","Input:\n","{'ravi': 10, 'rajnish': 9, 'sanjeev': 15, 'yash': 2, 'suraj': 32}\n","\n","Output:\n","{'rajnish': 9, 'ravi': 10, 'sanjeev': 15, 'suraj': 32, 'yash': 2}"]},{"cell_type":"code","execution_count":42,"id":"a96db4a0","metadata":{"id":"a96db4a0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745139007449,"user_tz":420,"elapsed":52,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"52c6917c-6550-425b-fc82-4546e77aaf41"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'rajnish': 9, 'ravi': 10, 'sanjeev': 15, 'suraj': 32, 'yash': 2}\n"]}],"source":["def sort_dictionary(x):\n","  return dict(sorted(x.items()))\n","x={'ravi': 10, 'rajnish': 9, 'sanjeev': 15, 'yash': 2, 'suraj': 32}\n","print(sort_dictionary(x))"]},{"cell_type":"markdown","id":"ec63c23a","metadata":{"id":"ec63c23a"},"source":["**41-write python program to Remove keys with Values Greater than K ( Including mixed values )\n","nput : test_dict = {‘Gfg’ : 3, ‘is’ : 7, ‘best’ : 10, ‘for’ : 6, ‘geeks’ : ‘CS’},\n","K = 7\n","Output : {‘Gfg’ : 3, ‘for’ : 6, ‘geeks’ : ‘CS’}"]},{"cell_type":"code","execution_count":40,"id":"e39c3a40","metadata":{"id":"e39c3a40","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745138911881,"user_tz":420,"elapsed":43,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"056e7392-f47b-468a-ed3f-4a245e6adcf0"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'Gfg': 3, 'is': 7, 'for': 6}\n"]}],"source":["def remove_keys(x,k):\n","  for key,value in list( x.items()):\n","     if value>k:\n","       del x[key]\n","  return x\n","x={'Gfg' : 3, 'is' : 7, 'best' : 10, 'for' : 6, 'geeks' : 8}\n","k=7\n","print(remove_keys(x,k))"]},{"cell_type":"markdown","id":"f143f0fe","metadata":{"id":"f143f0fe"},"source":["**42-Write a Python program to concatenate the following dictionaries to create a new one\n","\n","Sample Dictionary :\n","dic1={1:10, 2:20}\n","dic2={3:30, 4:40}\n","dic3={5:50,6:60}\n","Expected Result : {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}"]},{"cell_type":"code","execution_count":null,"id":"74ffdfea","metadata":{"id":"74ffdfea","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745102743079,"user_tz":420,"elapsed":49,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"3ee75aec-9084-4e8a-8d28-2b8d26849f80"},"outputs":[{"output_type":"stream","name":"stdout","text":["{1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}\n"]}],"source":[" dic1={1:10, 2:20}\n"," dic2={3:30, 4:40}\n"," dic3={5:50,6:60}\n"," dic1.update(dic2)\n"," dic1.update(dic3)\n"," print(dic1)\n","\n"]},{"cell_type":"markdown","id":"fb04c93c","metadata":{"id":"fb04c93c"},"source":["**43-Write a Python program to iterate over dictionaries using for loops"]},{"cell_type":"code","execution_count":33,"id":"6aebc470","metadata":{"id":"6aebc470","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745138486165,"user_tz":420,"elapsed":29,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"5d610e8e-013f-4d88-be53-a422c25ec2a6"},"outputs":[{"output_type":"stream","name":"stdout","text":["name kholoud\n","age 22\n"]}],"source":["x={'name':'kholoud','age':22}\n","for key,value in x.items():\n","  print(key,value)"]},{"cell_type":"code","source":["x={\"name\":\"kholoud\",\"age\":22}\n","for i in x:\n","  print(i,x[i])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XmZqJANyXJkp","executionInfo":{"status":"ok","timestamp":1745138596906,"user_tz":420,"elapsed":41,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"2b48ebc7-b316-46c1-f388-b3dad88b5d99"},"id":"XmZqJANyXJkp","execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["name kholoud\n","age 22\n"]}]},{"cell_type":"markdown","id":"5f491a9d","metadata":{"id":"5f491a9d"},"source":["**44- Write a Python script to merge two Python dictionaries"]},{"cell_type":"code","execution_count":32,"id":"b8a14028","metadata":{"id":"b8a14028","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745138359629,"user_tz":420,"elapsed":25,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"d4de8e26-85e1-452d-9bd9-b03fae6323b2"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'name': 'kholoud', 'age': 22, 'password': 1234, 'id': 54}\n"]}],"source":["x={\"name\":\"kholoud\",\"age\":22}\n","y={\"password\":1234,\"id\":54}\n","x.update(y)\n","print(x)"]},{"cell_type":"markdown","id":"216fc72d","metadata":{"id":"216fc72d"},"source":["**45-Write a Python program to get the maximum and minimum values of a dictionary values"]},{"cell_type":"code","execution_count":29,"id":"d6883f5f","metadata":{"id":"d6883f5f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745138056506,"user_tz":420,"elapsed":28,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"51db83e2-d98d-4c36-918a-fa90c6551383"},"outputs":[{"output_type":"stream","name":"stdout","text":["20\n","10\n"]}],"source":["dic1={1:10, 2:20}\n","print(max(dic1.values()))\n","print(min(dic1.values()))"]},{"cell_type":"markdown","id":"b6a53011","metadata":{"id":"b6a53011"},"source":["**46- Write a Python program to drop empty items from a given dictionary.\n","Original Dictionary:\n","{'c1': 'Red', 'c2': 'Green', 'c3': None}\n","New Dictionary after dropping empty items:\n","{'c1': 'Red', 'c2': 'Green'}"]},{"cell_type":"code","execution_count":28,"id":"b5c6fecf","metadata":{"id":"b5c6fecf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745138022661,"user_tz":420,"elapsed":27,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"7837975e-f795-4af1-a104-9766cc5ac0b2"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'c1': 'Red', 'c2': 'Green'}\n"]}],"source":["x= {'c1': 'Red', 'c2': 'Green', 'c3': None}\n","for i in list(x.keys()):\n","  if x[i]==None:\n","    del x[i]\n","print(x)\n",""]},{"cell_type":"markdown","id":"46d718c7","metadata":{"id":"46d718c7"},"source":["**47-Write a Python program to create a tuple of numbers and print one item"]},{"cell_type":"code","execution_count":null,"id":"13216ff5","metadata":{"id":"13216ff5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745103178231,"user_tz":420,"elapsed":10176,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"6336e001-7ce4-409b-c8bd-d283a359af90"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number: 4\n","enter the number: 6\n","enter the number: 7\n","enter the number: 8\n","enter the number: 3\n","(4, 6, 7, 8, 3)\n"]}],"source":["x=tuple()\n","for i in range(5):\n","  number=int(input(\"enter the number: \"))\n","  x+=(number,)\n","print(x)"]},{"cell_type":"markdown","id":"2be5b56b","metadata":{"id":"2be5b56b"},"source":["**48-Write a Python program to unpack a tuple into several variables"]},{"cell_type":"code","execution_count":23,"id":"595f44be","metadata":{"id":"595f44be","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745137681249,"user_tz":420,"elapsed":19,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"48467ad9-dde9-40ba-d4dc-a16859b0381d"},"outputs":[{"output_type":"stream","name":"stdout","text":["a =  2\n","b =  4\n","c =  6\n","d =  7\n","e =  8\n"]}],"source":["x={2,4,6,8,7}\n","a,b,c,d,e=x\n","print(\"a = \",a)\n","print(\"b = \",b)\n","print(\"c = \",c)\n","print(\"d = \",d)\n","print(\"e = \",e)\n"]},{"cell_type":"markdown","id":"392388a7","metadata":{"id":"392388a7"},"source":["**49-Write a Python program to add an item to a tuple"]},{"cell_type":"code","execution_count":null,"id":"54cc092e","metadata":{"id":"54cc092e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745103435038,"user_tz":420,"elapsed":11,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"04dd1f33-7d41-4805-c5f7-0e772999d073"},"outputs":[{"output_type":"stream","name":"stdout","text":["(3, 5, 6, 7, 9, 10)\n"]}],"source":["x=(3, 5, 6, 7, 9)\n","z=list(x)\n","z.append(10)\n","x=tuple(z)\n","print(x)\n"]},{"cell_type":"markdown","id":"3e8fd124","metadata":{"id":"3e8fd124"},"source":["**50-Write a Python program to convert a tuple to a string"]},{"cell_type":"code","execution_count":null,"id":"92a71ddc","metadata":{"id":"92a71ddc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745103543470,"user_tz":420,"elapsed":14,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"c61119e1-60ab-4b6f-906e-70459aa43fbc"},"outputs":[{"output_type":"stream","name":"stdout","text":["(3, 5, 6, 7, 9)\n","<class 'str'>\n"]}],"source":["x=(3, 5, 6, 7, 9)\n","z=str(x)\n","print(z)\n","print(type(z))"]},{"cell_type":"markdown","id":"f4f64ef4","metadata":{"id":"f4f64ef4"},"source":["**51-Write a Python program to convert a list to a tuple"]},{"cell_type":"code","execution_count":null,"id":"210d56d3","metadata":{"id":"210d56d3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745103566324,"user_tz":420,"elapsed":31,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"7dabb51f-eaac-433b-ab5b-813482e3a39d"},"outputs":[{"output_type":"stream","name":"stdout","text":["(3, 5, 6, 7, 9)\n","<class 'tuple'>\n"]}],"source":["x=[3, 5, 6, 7, 9]\n","z=tuple(x)\n","print(z)\n","print(type(z))"]},{"cell_type":"markdown","id":"b1e00ef7","metadata":{"id":"b1e00ef7"},"source":["**52-Write a Python program to reverse a tuple"]},{"cell_type":"code","execution_count":null,"id":"f45bfdc7","metadata":{"id":"f45bfdc7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745103650810,"user_tz":420,"elapsed":50,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"79913fa8-6865-4953-b3d1-8789ed3cbf87"},"outputs":[{"output_type":"stream","name":"stdout","text":["(9, 7, 6, 5, 3)\n"]}],"source":["c=(3, 5, 6, 7, 9)\n","print(c[::-1])"]},{"cell_type":"markdown","id":"3cd347d1","metadata":{"id":"3cd347d1"},"source":["**53-Write a Python program to replace the last value of tuples in a list.\n","Sample list: [(10, 20, 40), (40, 50, 60), (70, 80, 90)]\n","Expected Output: [(10, 20, 100), (40, 50, 100), (70, 80, 100)]"]},{"cell_type":"code","execution_count":null,"id":"3c4a2a4c","metadata":{"id":"3c4a2a4c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745103856692,"user_tz":420,"elapsed":14,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"11d8d541-58cb-4699-fa9f-cb5ccdccb875"},"outputs":[{"output_type":"stream","name":"stdout","text":["[(10, 20, 100), (40, 50, 100), (70, 80, 100)]\n"]}],"source":["c= [(10, 20, 40), (40, 50, 60), (70, 80, 90)]\n","for i in range(len(c)):\n","  c[i]=list(c[i])\n","  c[i][-1]=100\n","  c[i]=tuple(c[i])\n","print(c)"]},{"cell_type":"markdown","id":"76bb7b39","metadata":{"id":"76bb7b39"},"source":["**54-Write a Python program to convert a given string list to a tuple\n","Original string: python 3.0\n","<class 'str'>\n","Convert the said string to a tuple:\n","('p', 'y', 't', 'h', 'o', 'n', '3', '.', '0')"]},{"cell_type":"code","execution_count":1,"id":"51951937","metadata":{"id":"51951937","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745135439824,"user_tz":420,"elapsed":52,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"fd54a3b5-6e36-47f7-ecf6-31b570916c33"},"outputs":[{"output_type":"stream","name":"stdout","text":["('p', 'y', 't', 'h', 'o', 'n', '3', '.', '0')\n"]}],"source":["c=['p', 'y', 't', 'h', 'o', 'n', '3', '.', '0']\n","v=tuple(c)\n","print(v)"]},{"cell_type":"markdown","id":"5a1d5d97","metadata":{"id":"5a1d5d97"},"source":["**55-Write a Python program to calculate the average value of the numbers in a given tuple of tuples"]},{"cell_type":"code","execution_count":4,"id":"834e7992","metadata":{"id":"834e7992","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745135871522,"user_tz":420,"elapsed":9,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"a0817951-fb06-4489-f251-fc2b0e0199b5"},"outputs":[{"output_type":"stream","name":"stdout","text":["23.333333333333332\n","50.0\n","80.0\n"]}],"source":["c= [(10, 20, 40), (40, 50, 60), (70, 80, 90)]\n","for i in range(len(c)):\n","  c[i]=list(c[i])\n","  average=sum(c[i])/len(c[i])\n","  print(average)"]},{"cell_type":"markdown","id":"51edab9c","metadata":{"id":"51edab9c"},"source":["**56-Write a Python program to add member(s) to a set."]},{"cell_type":"code","execution_count":5,"id":"2b65df79","metadata":{"id":"2b65df79","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745135932594,"user_tz":420,"elapsed":75,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"9456a3a7-dcd9-4a17-d02a-cd1bb0254a77"},"outputs":[{"output_type":"stream","name":"stdout","text":["{3, 4, 5, 6, 7, 8}\n","{3, 4, 5, 6, 7, 8, 9, 10}\n"]}],"source":["n={3,4,5,6,7}\n","n.add(8)\n","print(n)\n","n.update({9,10})\n","print(n)"]},{"cell_type":"markdown","id":"965590cc","metadata":{"id":"965590cc"},"source":["**57-Write a Python program to remove an item from a set if it is present in the set."]},{"cell_type":"code","execution_count":7,"id":"866bab28","metadata":{"id":"866bab28","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745136076361,"user_tz":420,"elapsed":19,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"fdff556c-3fc2-44ce-f338-2a76098803e9"},"outputs":[{"output_type":"stream","name":"stdout","text":["{4, 5, 6, 7}\n","{5, 6, 7}\n"]}],"source":["s={3,4,5,6,7}\n","s.remove(3)\n","print(s)\n","s.pop()\n","print(s)"]},{"cell_type":"markdown","id":"2b7cfed1","metadata":{"id":"2b7cfed1"},"source":["**58-Write a Python program to create an intersection,union,difference and symmetric difference of sets"]},{"cell_type":"code","execution_count":14,"id":"7f94b7fe","metadata":{"id":"7f94b7fe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745136470681,"user_tz":420,"elapsed":36,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"186255ab-8003-470a-f77d-14933ff497e2"},"outputs":[{"output_type":"stream","name":"stdout","text":["{5, 6, 7}\n","{2, 3, 4, 5, 6, 7, 8, 9, 11}\n","{2, 3, 4}\n","{2, 3, 4, 8, 9, 11}\n","**************************************\n","{5, 6, 7}\n","{2, 3, 4, 5, 6, 7, 8, 9, 11}\n","{2, 3, 4}\n","{2, 3, 4, 8, 9, 11}\n"]}],"source":["x={2,3,4,5,6,7}\n","y={5,6,7,8,9,11}\n","print(x.intersection(y))\n","print(x.union(y))\n","print(x.difference(y))\n","print(x.symmetric_difference(y))\n","print(\"**************************************\")\n","\n","print(x&y)\n","print(x|y)\n","print(x-y)\n","print(x^y)"]},{"cell_type":"markdown","id":"b94931e2","metadata":{"id":"b94931e2"},"source":["**59-Write a Python program to find the maximum and minimum values in a set"]},{"cell_type":"code","execution_count":16,"id":"203f9600","metadata":{"id":"203f9600","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745136534656,"user_tz":420,"elapsed":60,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"764bc030-60de-46a1-9e8b-2bf2095281f3"},"outputs":[{"output_type":"stream","name":"stdout","text":["9\n","3\n"]}],"source":["x={3,4,6,7,8,9}\n","print(max(x))\n","print(min(x))"]},{"cell_type":"markdown","id":"255fd554","metadata":{"id":"255fd554"},"source":["**60- Write a Python program that finds all pairs of elements in a list whose sum is equal to a given value."]},{"cell_type":"code","execution_count":22,"id":"c2d94e1f","metadata":{"id":"c2d94e1f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745137387107,"user_tz":420,"elapsed":53,"user":{"displayName":"Kholoud Mohammed","userId":"14490474565126088183"}},"outputId":"64c63034-a6f9-4b65-bf41-4fe1ee7b3e54"},"outputs":[{"output_type":"stream","name":"stdout","text":["[(1, 7), (2, 6), (3, 5)]\n"]}],"source":["x=[1,2,3,4,5,6,8,7]\n","y=8\n","pairs=[]\n","for i in range(len(x)):\n","  for j in range(i+1,len(x)):\n","    if x[i]+x[j]==y:\n","      pairs.append((x[i],x[j]))\n","print(pairs)"]},{"cell_type":"code","source":["\n"],"metadata":{"id":"LTyD0z70PSUT"},"id":"LTyD0z70PSUT","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.7"},"colab":{"provenance":[{"file_id":"1Sq7A7fhQd5g5CaRlJia688dfX5CMcYO7","timestamp":1745140095006},{"file_id":"1NMSMq13bbWbshe8hudPC7v6bR9CFqQK2","timestamp":1745104124566},{"file_id":"1NaMVuO0uB8x7dgVI664tSs4pcuPuoOK8","timestamp":1745066858690},{"file_id":"13wZnb2gSBvX6Ty70xkDpOf87KvzgoOTw","timestamp":1744675102592},{"file_id":"1YUxpqN_8cdy_o0FCwl1BlJ2rmJ738eWJ","timestamp":1744491682991},{"file_id":"1_-3EQ7j8ysNm0dlIy44jhvoeA0u8p9-P","timestamp":1742653128480}]}},"nbformat":4,"nbformat_minor":5}